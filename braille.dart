import 'dart:convert';

class Braille {
  static final Map<String, String> _charToBrailleMap = {
    'A': utf8.decode([0xE2, 0xA0, 0x81]),
    'B': utf8.decode([0xE2, 0xA0, 0x83]),
    'C': utf8.decode([0xE2, 0xA0, 0x89]),
    'D': utf8.decode([0xE2, 0xA0, 0x99]),
    'E': utf8.decode([0xE2, 0xA0, 0x91]),
    'F': utf8.decode([0xE2, 0xA0, 0x8B]),
    'G': utf8.decode([0xE2, 0xA0, 0x9B]),
    'H': utf8.decode([0xE2, 0xA0, 0x93]),
    'I': utf8.decode([0xE2, 0xA0, 0x8A]),
    'J': utf8.decode([0xE2, 0xA0, 0x9A]),
    'K': utf8.decode([0xE2, 0xA0, 0x85]),
    'L': utf8.decode([0xE2, 0xA0, 0x87]),
    'M': utf8.decode([0xE2, 0xA0, 0x8D]),
    'N': utf8.decode([0xE2, 0xA0, 0x9D]),
    'O': utf8.decode([0xE2, 0xA0, 0x95]),
    'P': utf8.decode([0xE2, 0xA0, 0x8F]),
    'Q': utf8.decode([0xE2, 0xA0, 0x9F]),
    'R': utf8.decode([0xE2, 0xA0, 0x97]),
    'S': utf8.decode([0xE2, 0xA0, 0x8E]),
    'T': utf8.decode([0xE2, 0xA0, 0x9E]),
    'U': utf8.decode([0xE2, 0xA0, 0xA5]),
    'V': utf8.decode([0xE2, 0xA0, 0xA7]),
    'W': utf8.decode([0xE2, 0xA0, 0xBA]),
    'X': utf8.decode([0xE2, 0xA0, 0xAD]),
    'Y': utf8.decode([0xE2, 0xA0, 0xBD]),
    'Z': utf8.decode([0xE2, 0xA0, 0xB5]),
    'Á': utf8.decode([0xE2, 0xA0, 0xB7]),
    'É': utf8.decode([0xE2, 0xA0, 0xBF]),
    'Í': utf8.decode([0xE2, 0xA0, 0x8C]),
    'Ó': utf8.decode([0xE2, 0xA0, 0xAC]),
    'Ú': utf8.decode([0xE2, 0xA0, 0xBE]),
    'À': utf8.decode([0xE2, 0xA0, 0xAB]),
    'Â': utf8.decode([0xE2, 0xA0, 0xA1]),
    'Ê': utf8.decode([0xE2, 0xA0, 0xA3]),
    'Ô': utf8.decode([0xE2, 0xA0, 0xB9]),
    'Ã': utf8.decode([0xE2, 0xA0, 0x9C]),
    'Õ': utf8.decode([0xE2, 0xA0, 0xAA]),
    'Ç': utf8.decode([0xE2, 0xA0, 0xAF]),
    ',': utf8.decode([0xE2, 0xA0, 0x82]),
    ';': utf8.decode([0xE2, 0xA0, 0x86]),
    ':': utf8.decode([0xE2, 0xA0, 0x92]),
    '.': utf8.decode([0xE2, 0xA0, 0x84]),
    '?': utf8.decode([0xE2, 0xA0, 0xA2]),
    '!': utf8.decode([0xE2, 0xA0, 0x96]),
    '-': utf8.decode([0xE2, 0xA0, 0xA4]),
    '/': utf8.decode([0xE2, 0xA0, 0xA0]) + utf8.decode([0xE2, 0xA0, 0x82]),
    '#': utf8.decode([0xE2, 0xA0, 0xBC]) + utf8.decode([0xE2, 0xA0, 0x85]),
    '(': utf8.decode([0xE2, 0xA0, 0xA3]) + utf8.decode([0xE2, 0xA0, 0x84]),
    ')': utf8.decode([0xE2, 0xA0, 0xA0]) + utf8.decode([0xE2, 0xA0, 0x9C]),
    '[': utf8.decode([0xE2, 0xA0, 0xB7]) + utf8.decode([0xE2, 0xA0, 0x84]),
    ']': utf8.decode([0xE2, 0xA0, 0xB7]) + utf8.decode([0xE2, 0xA0, 0xBE]),
    '*': utf8.decode([0xE2, 0xA0, 0x94]),
    "'": utf8.decode([0xE2, 0xA0, 0xA0]) + utf8.decode([0xE2, 0xA0, 0xA6]),
    '"': utf8.decode([0xE2, 0xA0, 0xA6]),
    '×': utf8.decode([0xE2, 0xA0, 0xA8]) + utf8.decode([0xE2, 0xA0, 0xA6]),
    '%': utf8.decode([0xE2, 0xA0, 0xB8]) + utf8.decode([0xE2, 0xA0, 0xB4]),
    '°': utf8.decode([0xE2, 0xA0, 0xB4]),
    '|': utf8.decode([0xE2, 0xA0, 0xB8]),
    '\$': utf8.decode([0xE2, 0xA0, 0xB0]),
    '=': utf8.decode([0xE2, 0xA0, 0xB6]),
    '0': utf8.decode([0xE2, 0xA0, 0x9A]),
    '1': utf8.decode([0xE2, 0xA0, 0x81]),
    '2': utf8.decode([0xE2, 0xA0, 0x83]),
    '3': utf8.decode([0xE2, 0xA0, 0x89]),
    '4': utf8.decode([0xE2, 0xA0, 0x99]),
    '5': utf8.decode([0xE2, 0xA0, 0x91]),
    '6': utf8.decode([0xE2, 0xA0, 0x8B]),
    '7': utf8.decode([0xE2, 0xA0, 0x9B]),
    '8': utf8.decode([0xE2, 0xA0, 0x93]),
    '9': utf8.decode([0xE2, 0xA0, 0x8A]),
    ' ': ' ',
  };

  static String translateFromChar(String text) {
    List<String?> _brailleText = [];
    for (String temp in text.split('')) {
      if (_charToBrailleMap.containsKey(temp.toUpperCase())) {
        if (temp.contains(RegExp(r'[A-Z]'))) {
          _brailleText.add(utf8.decode([0xE2, 0xA0, 0xA8]));
          _brailleText.add(_charToBrailleMap[temp]);
        } else if (temp.contains(RegExp(r'[0-9]'))) {
          _brailleText.add(utf8.decode([0xE2, 0xA0, 0xBC]));
          _brailleText.add(_charToBrailleMap[temp]);
        } else {
          _brailleText.add(_charToBrailleMap[temp.toUpperCase()]);
        }
      } else if (temp == '\n') {
        _brailleText.add('\n');
      } else {
        _brailleText.add('Ⱥ');
      }
    }
    return _brailleText.join('');
  }
}
